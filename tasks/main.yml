---
# tasks file for ldapserver

- name: Install ldapserver package
  become: yes
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - openldap-servers
    - python-ldap
    
- name: Enable slapd
  become: yes
  service:
    name: slapd
    enabled: yes
  
- name: Start slapd
  become: yes
  service:
    name: slapd
    state: started

- name: Set LDAP attributes
  become: yes
  ldap_attr:
    dn: "{{ item.dn }}"
    name: "{{ item.attr }}"
    state: exact
    values: "{{ item.value }}"
  with_items:
    "{{ ldap_settings }}"
    
- name: Update the schema
  become: yes
  shell: "/usr/bin/ldapadd -Y EXTERNAL  -H ldapi:/// -f {{ item.ldif }} && touch {{ item.loaded }}"
  args:
    chdir: /etc/openldap/schema
    creates: "{{ item.loaded }}"
  with_items:
    "{{ schema_adds }}"

- name: Install the DB_CONFIG
  become: yes
  template:
    src: "DB_CONFIG.j2"
    dest: /var/lib/ldap/DB_CONFIG

- name: Ensure ownership of LDAP db
  become: yes
  file: 
    dest: /var/lib/ldap
    owner: ldap
    group: ldap
    recurse: yes

- name: Create LDAP top
  become: yes
  ldap_entry:
    dn: "{{ ldap_base }}"
    objectClass:
      - top
      - domain
    state: present
    server_uri: ldap://localhost
    bind_dn: "{{ ldap_admin }}"
    bind_pw: "{{ ldap_root_passwd }}"

- name: Create LDAP admin
  become: yes
  ldap_entry:
    dn: "{{ ldap_admin }}"
    objectClass:
      - organizationalRole
    attributes:
      description: LDAP Manager
    state: present
    server_uri: ldap://localhost
    bind_dn: "{{ ldap_admin }}"
    bind_pw: "{{ ldap_root_passwd }}"

- name: Create People
  become: yes
  ldap_entry:
    dn: "ou=People,{{ ldap_base }}"
    objectClass:
      - organizationalUnit
    attributes:
      ou: People
    state: present
    server_uri: ldap://localhost
    bind_dn: "{{ ldap_admin }}"
    bind_pw: "{{ ldap_root_passwd }}"

- name: Create Group
  become: yes
  ldap_entry:
    dn: "ou=Group,{{ ldap_base }}"
    objectClass:
      - organizationalUnit
    attributes:
      ou: Group
    state: present
    server_uri: ldap://localhost
    bind_dn: "{{ ldap_admin }}"
    bind_pw: "{{ ldap_root_passwd }}"

- name: Copy CA
  become: yes
  copy:
    src: "{{ ca_source_cert }}"
    dest: "{{ ca_cert }}"

- name: Copy Server Cert
  become: yes
  copy:
    src: "{{ server_source_cert }}"
    dest: "{{ server_cert }}"

- name: Copy Server Key
  become: yes
  copy:
    src: "{{ server_source_cert }}"
    dest: "{{ server_key }}"
